@page
@model IndexModel
@{
    ViewData["Title"] = "Main Page";
}

<div class="text-center">
    <h1 class="display-4">Deep R1 Model</h1>
    <p>AI Application Core Interface</p>
    <form>
    <div class="form-group">
        <label asp-for="Chat.Prompt" class="control-label"></label>
        <textarea asp-for="Chat.Prompt" class="form-control textarea" rows="5"></textarea>
        <span asp-validation-for="Chat.Prompt" class="text-danger"></span>
    </div>
    
    <div class="form-group button-container">
        <select id="model" name="model"> <option  value="deepseek-r1">
            deepseek-r1
        </option>
        <option value="HammerAI/hermes-3-llama-3.1">
            hermes-3-llama-3.1
        </option>
        <option value="huihui_ai/gemma3-abliterated:1b">
            gemma3
        </option>
        <option value="leeplenty/lumimaid-v0.2:8b">
            lumimaid
        </option>
        
        </select>
        <input type="submit" value="Create" class="btn btn-primary"/>
    </div>
    </form>
</div>

<div class="response-container">
    <h2>Response</h2>
    <div class="response-box"></div>
</div>


<script>
    const textArea = document.querySelector('.textarea');
    document.querySelector("form").addEventListener("submit",submitHandler)

     
    textArea.addEventListener('keydown',(event)=>{
        if(event.repeat === false && event.key === 'Enter'){
            event.preventDefault();
           document.querySelector(".btn-primary").click();
        }
    })
    
    
    
    
    
    
    async function submitHandler(event){
      
        {if(textArea.value.length === 0) return;
            event.preventDefault();
            const currentOrigin = window.location.origin;
            console.log(currentOrigin);
            const button = document.querySelector(".btn");
            button.disabled = true;
            const formData = new FormData(event.target);
            const data = Object.fromEntries(formData);
            textArea.value = '';
            const responseBoxNode = document.querySelector(".response-box")
            const pNode = document.createElement("p");
            pNode.classList.add("response-box__user")
            pNode.textContent = data["Chat.Prompt"];
           const model = data["model"];
            responseBoxNode.append(pNode);


            try {
                const prompt = await fetch('http://192.168.1.76:5108/api/Chat', {
                    method: "POST",
                    mode: "cors",
                    headers: {"Content-Type": "application/json",
                        'Origin': currentOrigin,
                    },
                    body: JSON.stringify({
                        model: model,
                        prompt: [
                            {
                                "role": "user",
                                "content":  data["Chat.Prompt"]
                            }
                        ]
                    })
                }).catch((e)=>{console.log(e)})
                
                
                
                if(prompt?.ok){

                    const JSON = await prompt.json();


                    const pNode = document.createElement("p");
                    pNode.classList.add("response-box__assistant")
                    pNode.textContent = JSON.response;
                    responseBoxNode.appendChild(pNode);
                } else {
                    const pNode = document.createElement("p");
                    pNode.classList.add("response-box__error")
                    const serverErrorText = "No Response from server";
                    pNode.textContent = serverErrorText;
                    if(responseBoxNode.hasChildNodes() === false) responseBoxNode.appendChild(pNode);
                    else if(responseBoxNode.lastChild.textContent !==  serverErrorText) {
                        responseBoxNode.appendChild(pNode);
                    }
                }
            }
            catch (e) {
                console.log(e)
            }
            button.disabled = false;
        }
        
        
        
    }
    
    
    
    
    
    
    
  
    
</script>